============================================
 	Генерируем внешние API по-питоновски
============================================

В python есть такое негласное правило - никогда не повторяйся.
Если в программе приходить писать почти одно и то-же два раза, значит
вы вы что-то сделали не так (если, конечно, это не было сделанно 
намеренно). Я приведу пример, как можно автоматизировать генерацию
внешних API таким образом, что достаточно будет в одном месте
в удобной и универсальной форме описать поддерживаемые вызовы, а 
все внешнее API для этих вызовов будет генерироваться автоматически.

Итак мы пишем серверный компонент программы, который должен
контролироваться внешними утилитами. Типичные варианты управления:

* CLI - административный интерфейс коммандной строки, так-же удобен для разработки 
* REST - для других языков, WebUI & Co
* RCP в каком-то виде (thrift, PyRo, etc)

Нам нужна библиотека, которая позволит один раз задать интерфейсы API функций,
сгенерирует по ним интерфейсы для всех внешних API, будет автоматически 
валидировать приходящие параметры и сделает удобочитаемую документацию. 
Для начала хватит. Любая библиотека проектируется отталкиваясь от 
примеров ее использования:

.. sourcecode:: python

	class Add(APICallBase):
		result = (int, "sum of integers")
		params = Param([int], "list of integers to make a sum")

	class Sub(APICallBase):
		result = (int, "param1 - param2")
		params = Param((int, int), "substitute second int from first")

	class Ping(APICallBase):
		result = (float, "ping time in seconds")
		ip = Param(IPAddr, "ip addr to ping")


.. sourcecode:: console
	
	$ ./cli add --params 1 2 3 
	6

	$ ./cli ping --ip 8.8.8.8
	0.055

	$ curl http://localhost:8000/add?params={1,2,3}
	$ curl http://localhost:8000/ping?ip=8.8.8.8
